{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst btnEl = document.querySelector('[data-start]');\nconst dayEl = document.querySelector('[data-days]');\nconst hourEl = document.querySelector('[data-hours]');\nconst minuteEl = document.querySelector('[data-minutes]');\nconst secondEl = document.querySelector('[data-seconds]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\n\nbtnEl.addEventListener('click', btnElHandler);\nlet intervalId = null;\nlet userSelectedDate = null;\nbtnEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    console.log(userSelectedDate);\n    validateDate();\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nfunction validateDate() {\n  if (userSelectedDate < Date.now()) {\n    return iziToast.error({\n      position: 'topRight',\n\n      message: 'Please choose a date in the future',\n    });\n  }\n  btnEl.disabled = false;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction btnElHandler() {\n  dateTimePicker.disabled = true;\n  btnEl.disabled = true;\n\n  intervalId = setInterval(updateTimeField, 1000);\n  return;\n}\n\nfunction updateTimeField() {\n  const curentTime = userSelectedDate - new Date();\n\n  if (curentTime <= 0) {\n    dateTimePicker.disabled = false;\n    clearInterval(intervalId);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(curentTime);\n\n  dayEl.textContent = String(days).padStart(2, 0);\n  hourEl.textContent = String(hours).padStart(2, 0);\n  minuteEl.textContent = String(minutes).padStart(2, 0);\n  secondEl.textContent = String(seconds).padStart(2, 0);\n}\n"],"names":["btnEl","dayEl","hourEl","minuteEl","secondEl","dateTimePicker","btnElHandler","intervalId","userSelectedDate","options","selectedDates","validateDate","flatpickr","iziToast","convertMs","ms","days","hours","minutes","seconds","updateTimeField","curentTime"],"mappings":"0IAQA,MAAMA,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAiB,SAAS,cAAc,kBAAkB,EAEhEL,EAAM,iBAAiB,QAASM,CAAY,EAC5C,IAAIC,EAAa,KACbC,EAAmB,KACvBR,EAAM,SAAW,GAEjB,MAAMS,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClC,QAAQ,IAAIF,CAAgB,EAC5BG,GACD,CACH,EAEAC,EAAUP,EAAgBI,CAAO,EAEjC,SAASE,GAAe,CACtB,GAAIH,EAAmB,KAAK,MAC1B,OAAOK,EAAS,MAAM,CACpB,SAAU,WAEV,QAAS,oCACf,CAAK,EAEHb,EAAM,SAAW,EACnB,CAEA,SAASc,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASb,GAAe,CACtBD,EAAe,SAAW,GAC1BL,EAAM,SAAW,GAEjBO,EAAa,YAAYa,EAAiB,GAAI,CAEhD,CAEA,SAASA,GAAkB,CACzB,MAAMC,EAAab,EAAmB,IAAI,KAE1C,GAAIa,GAAc,EAAG,CACnBhB,EAAe,SAAW,GAC1B,cAAcE,CAAU,EACxB,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAU,EAE9DpB,EAAM,YAAc,OAAOe,CAAI,EAAE,SAAS,EAAG,CAAC,EAC9Cd,EAAO,YAAc,OAAOe,CAAK,EAAE,SAAS,EAAG,CAAC,EAChDd,EAAS,YAAc,OAAOe,CAAO,EAAE,SAAS,EAAG,CAAC,EACpDd,EAAS,YAAc,OAAOe,CAAO,EAAE,SAAS,EAAG,CAAC,CACtD"}